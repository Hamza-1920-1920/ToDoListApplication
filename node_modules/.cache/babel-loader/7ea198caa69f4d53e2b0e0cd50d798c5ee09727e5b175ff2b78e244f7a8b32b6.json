{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\supaf\\\\Desktop\\\\gomycode\\\\checkpoint9\\\\src\\\\Components\\\\TaskList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport TaskForm from './TaskForm';\nimport TaskItem from './TaskItem';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TaskList = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [editTask, setEditTask] = useState(null);\n\n  // ----------- Local Storage -------------//\n  // useEffect(() => {\n  //     const storedTasks = JSON.parse(localStorage.getItem('tasks'));\n  //     if (storedTasks) {\n  //         setTasks(storedTasks);\n  //     }\n  // }, []);\n\n  // useEffect(() => {\n  //     localStorage.setItem('tasks', JSON.stringify(tasks));\n  // }, [tasks]);\n\n  // ------------------ Adding Item --------------- //\n\n  const addTask = task => {\n    setTasks([...tasks, {\n      ...task,\n      id: Date.now(),\n      completed: false\n    }]);\n    console.log(tasks);\n  };\n\n  // ------------------Edit Item --------------- //\n  const edditting = updatedTask => {\n    console.log('updatedTask' + updatedTask);\n    setTasks(tasks.map(task => {\n      return task.id === updatedTask.id ? updatedTask : task;\n    }));\n    setEditTask(null);\n  };\n\n  // -----------   -------------//\n\n  const startEditTask = task => {\n    setEditTask(task);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(TaskForm, {\n        addTask: addTask,\n        edditting: edditting,\n        editTask: editTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), tasks.map(task => /*#__PURE__*/_jsxDEV(TaskItem, {\n        task: task,\n        startEditTask: startEditTask\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 25\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(TaskList, \"w0fUHPKWXkVqgYykIq73OSqKf60=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useState","useEffect","TaskForm","TaskItem","jsxDEV","_jsxDEV","Fragment","_Fragment","TaskList","_s","tasks","setTasks","editTask","setEditTask","addTask","task","id","Date","now","completed","console","log","edditting","updatedTask","map","startEditTask","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/supaf/Desktop/gomycode/checkpoint9/src/Components/TaskList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport TaskForm from './TaskForm'\nimport TaskItem from './TaskItem'\n\n\nconst TaskList = () => {\n\n\n    const [tasks, setTasks] = useState([])\n    const [editTask, setEditTask] = useState(null)\n\n\n    // ----------- Local Storage -------------//\n    // useEffect(() => {\n    //     const storedTasks = JSON.parse(localStorage.getItem('tasks'));\n    //     if (storedTasks) {\n    //         setTasks(storedTasks);\n    //     }\n    // }, []);\n\n    // useEffect(() => {\n    //     localStorage.setItem('tasks', JSON.stringify(tasks));\n    // }, [tasks]);\n\n\n\n\n    // ------------------ Adding Item --------------- //\n\n    const addTask = (task) => {\n        setTasks([...tasks, { ...task, id: Date.now(), completed: false }])\n        console.log(tasks)\n    }\n\n    // ------------------Edit Item --------------- //\n    const edditting = (updatedTask) => {\n        console.log('updatedTask' + updatedTask)\n        setTasks(tasks.map((task) => { return task.id === updatedTask.id ? updatedTask : task }))\n        setEditTask(null)\n    }\n\n    // -----------   -------------//\n\n    const startEditTask = (task) => {\n        setEditTask(task)\n    }\n    return (\n        <>\n\n            <div>\n                <TaskForm addTask={addTask} edditting={edditting} editTask={editTask} />\n                {\n                    tasks.map((task) =>\n                        <TaskItem\n                            key={task.id}\n                            task={task}\n                            startEditTask={startEditTask}\n\n                        />)\n                }\n            </div>\n        </>\n    )\n}\nexport default TaskList\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,QAAQ,MAAM,YAAY;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAGjC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAGnB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;;EAG9C;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAKA;;EAEA,MAAMc,OAAO,GAAIC,IAAI,IAAK;IACtBJ,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAE;MAAE,GAAGK,IAAI;MAAEC,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;MAAEC,SAAS,EAAE;IAAM,CAAC,CAAC,CAAC;IACnEC,OAAO,CAACC,GAAG,CAACX,KAAK,CAAC;EACtB,CAAC;;EAED;EACA,MAAMY,SAAS,GAAIC,WAAW,IAAK;IAC/BH,OAAO,CAACC,GAAG,CAAC,aAAa,GAAGE,WAAW,CAAC;IACxCZ,QAAQ,CAACD,KAAK,CAACc,GAAG,CAAET,IAAI,IAAK;MAAE,OAAOA,IAAI,CAACC,EAAE,KAAKO,WAAW,CAACP,EAAE,GAAGO,WAAW,GAAGR,IAAI;IAAC,CAAC,CAAC,CAAC;IACzFF,WAAW,CAAC,IAAI,CAAC;EACrB,CAAC;;EAED;;EAEA,MAAMY,aAAa,GAAIV,IAAI,IAAK;IAC5BF,WAAW,CAACE,IAAI,CAAC;EACrB,CAAC;EACD,oBACIV,OAAA,CAAAE,SAAA;IAAAmB,QAAA,eAEIrB,OAAA;MAAAqB,QAAA,gBACIrB,OAAA,CAACH,QAAQ;QAACY,OAAO,EAAEA,OAAQ;QAACQ,SAAS,EAAEA,SAAU;QAACV,QAAQ,EAAEA;MAAS;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAEpEpB,KAAK,CAACc,GAAG,CAAET,IAAI,iBACXV,OAAA,CAACF,QAAQ;QAELY,IAAI,EAAEA,IAAK;QACXU,aAAa,EAAEA;MAAc,GAFxBV,IAAI,CAACC,EAAE;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIf,CAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEV;EAAC,gBACR,CAAC;AAEX,CAAC;AAAArB,EAAA,CA1DKD,QAAQ;AAAAuB,EAAA,GAARvB,QAAQ;AA2Dd,eAAeA,QAAQ;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}