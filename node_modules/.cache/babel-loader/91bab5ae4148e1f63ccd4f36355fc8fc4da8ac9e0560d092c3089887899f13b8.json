{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\supaf\\\\Desktop\\\\gomycode\\\\checkpoint9\\\\src\\\\Components\\\\TaskForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TaskForm = ({\n  addTask,\n  edditing,\n  editTask\n}) => {\n  _s();\n  const [task, setTask] = useState({\n    name: '',\n    description: ''\n  });\n  useEffect(() => {\n    if (edditing) {\n      setTask(editTask);\n    }\n  }, [editTask]);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setTask(prevTask => {\n      return {\n        ...prevTask,\n        [name]: value\n      };\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!task.name || !task.description) {\n      alert('Please fill in all fields.');\n      return;\n    }\n    if (editTask) {\n      edditing(task);\n    } else {\n      addTask(task);\n    }\n    setTask({\n      name: '',\n      description: ''\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        value: task.name,\n        onChange: handleChange,\n        placeholder: \"Task Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"description\",\n        value: task.description,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: [\"  \", editTask ? 'Update Task' : 'Add Task', \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(TaskForm, \"cCh4lz9MLgrWUk8idAqQItcvko4=\");\n_c = TaskForm;\nexport default TaskForm;\nvar _c;\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","TaskForm","addTask","edditing","editTask","_s","task","setTask","name","description","handleChange","e","value","target","prevTask","handleSubmit","preventDefault","alert","children","onSubmit","type","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/supaf/Desktop/gomycode/checkpoint9/src/Components/TaskForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\n\nconst TaskForm = ({ addTask, edditing, editTask }) => {\n\n    const [task, setTask] = useState({ name: '', description: '' })\n\n    useEffect(() => {\n        if (edditing) {\n            setTask(editTask)\n        }\n    }, [editTask])\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setTask((prevTask) => {\n            return { ...prevTask, [name]: value }\n        })\n    }\n\n\n    const handleSubmit = (e) => {\n\n        e.preventDefault();\n        if (!task.name || !task.description) {\n            alert('Please fill in all fields.');\n            return;\n        }\n        if (editTask) {\n            edditing(task);\n\n        } else {\n            addTask(task);\n\n        }\n        setTask({ name: '', description: '' });\n\n    };\n    return (\n\n        <>\n            <form onSubmit={handleSubmit}>\n                <input type='text' name='name' value={task.name} onChange={handleChange} placeholder='Task Name' />\n                <textarea name='description' value={task.description} onChange={handleChange} />\n                <button type='submit' >  {editTask ? 'Update Task' : 'Add Task'} </button>\n            </form>\n\n        </>\n    )\n\n}\nexport default TaskForm;\n\n\n\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAElD,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,OAAO;EAAEC,QAAQ;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAElD,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC;IAAEa,IAAI,EAAE,EAAE;IAAEC,WAAW,EAAE;EAAG,CAAC,CAAC;EAE/Db,SAAS,CAAC,MAAM;IACZ,IAAIO,QAAQ,EAAE;MACVI,OAAO,CAACH,QAAQ,CAAC;IACrB;EACJ,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;EAEd,MAAMM,YAAY,GAAIC,CAAC,IAAK;IACxB,MAAM;MAAEH,IAAI;MAAEI;IAAM,CAAC,GAAGD,CAAC,CAACE,MAAM;IAChCN,OAAO,CAAEO,QAAQ,IAAK;MAClB,OAAO;QAAE,GAAGA,QAAQ;QAAE,CAACN,IAAI,GAAGI;MAAM,CAAC;IACzC,CAAC,CAAC;EACN,CAAC;EAGD,MAAMG,YAAY,GAAIJ,CAAC,IAAK;IAExBA,CAAC,CAACK,cAAc,CAAC,CAAC;IAClB,IAAI,CAACV,IAAI,CAACE,IAAI,IAAI,CAACF,IAAI,CAACG,WAAW,EAAE;MACjCQ,KAAK,CAAC,4BAA4B,CAAC;MACnC;IACJ;IACA,IAAIb,QAAQ,EAAE;MACVD,QAAQ,CAACG,IAAI,CAAC;IAElB,CAAC,MAAM;MACHJ,OAAO,CAACI,IAAI,CAAC;IAEjB;IACAC,OAAO,CAAC;MAAEC,IAAI,EAAE,EAAE;MAAEC,WAAW,EAAE;IAAG,CAAC,CAAC;EAE1C,CAAC;EACD,oBAEIX,OAAA,CAAAE,SAAA;IAAAkB,QAAA,eACIpB,OAAA;MAAMqB,QAAQ,EAAEJ,YAAa;MAAAG,QAAA,gBACzBpB,OAAA;QAAOsB,IAAI,EAAC,MAAM;QAACZ,IAAI,EAAC,MAAM;QAACI,KAAK,EAAEN,IAAI,CAACE,IAAK;QAACa,QAAQ,EAAEX,YAAa;QAACY,WAAW,EAAC;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACnG5B,OAAA;QAAUU,IAAI,EAAC,aAAa;QAACI,KAAK,EAAEN,IAAI,CAACG,WAAY;QAACY,QAAQ,EAAEX;MAAa;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAChF5B,OAAA;QAAQsB,IAAI,EAAC,QAAQ;QAAAF,QAAA,GAAE,IAAE,EAACd,QAAQ,GAAG,aAAa,GAAG,UAAU,EAAC,GAAC;MAAA;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxE;EAAC,gBAET,CAAC;AAGX,CAAC;AAAArB,EAAA,CA/CKJ,QAAQ;AAAA0B,EAAA,GAAR1B,QAAQ;AAgDd,eAAeA,QAAQ;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}